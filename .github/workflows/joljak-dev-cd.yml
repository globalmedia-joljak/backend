# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JOLJAK-DEV CD

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: echo JOLJAK-DEV CI
        run: echo ==========JOLJAK-DEV CI==========

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
        run: ./gradlew :joljak-application:clean :joljak-application:build

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir -p joljak-application-dev/deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp joljak-application/build/libs/*.jar joljak-application-dev/deploy/

      - name: Copy appspec
        run: cp ./appspec/dev/appspec.yml joljak-application-dev/deploy/

      - name: Copy shell
        run: cp ./scripts/joljak-dev-deploy.sh joljak-application-dev/deploy/

      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j joljak-application-dev-deploy.zip joljak-application-dev/deploy/*

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \
          joljak-application-dev-deploy.zip s3://joljak-common/deploy/dev/

      # Deploy Joljak DEV
      - name: Deploy Joljak DEV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name joljak-dev-deploy \
          --deployment-group-name joljak-dev-deploy \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=joljak-common,bundleType=zip,key=deploy/dev/joljak-application-dev-deploy.zip \
          --region ap-northeast-2

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 개발 환경 CI 알림 봇
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
          SLACK_WEBHOOK_URL: ${{ secrets.DEV_CI_SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.


